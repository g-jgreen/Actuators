{"name":"dashboardSendTweet","version":"0.0.4","type":"actuator","script":"var props = options.requiredProperties;\nvar OAuthConsumerKey = options.globalSettings.TWITTER_CONSUMERID;\nvar OAuthConsumerSecret = options.globalSettings.TWITTER_CONSUMERSECRET;\nvar clientId = options.globalSettings.DASHBOARD_KEY;\nvar clientSecret = options.globalSettings.DASHBOARD_SECRET;\nvar dashboardDomain = options.globalSettings.DASHBOARD_DOMAIN;\nvar message = waylayUtil.template(options, props.message);\n\nvar profile = props.profile || waylayUtil.getResource(options);\n\nvar getToken = function(callback) {\n    var options = {\n        url: \"https://\"+dashboardDomain+\"/api/token/twitter/\" + profile,\n        auth: {\n            user: clientId,\n            password: clientSecret\n        }\n    };\n    try {\n        request(options, function(error, response, body) {\n            if (!error && response.statusCode == 200) {\n                var bodyJson = JSON.parse(body);\n                console.info(bodyJson);\n                callback(null, bodyJson);\n            } else {\n                callback(new Error(\"Calling twitter api failed: \" + error + \" \" + body + options.url));\n            }   \n        });\n    } catch(err){\n        callback(new Error(\"Calling twitter api failed: \" + err));\n    }\n}\n\nfunction updateStatus(accessToken, accessSecret, message) {\n    var sendClient = new twitter({\n        consumer_key: OAuthConsumerKey,\n        consumer_secret: OAuthConsumerSecret,\n        access_token_key: accessToken,\n        access_token_secret: accessSecret\n    });\n    \n    console.info(\"tweet : \" + message);\n    var tweet = {\n        status:  message\n    };\n    var deferred = Q.defer();\n    console.log(\"sending \" +message);\n    try{\n        sendClient.post('statuses/update', tweet, function(error, tweet, response){\n            if(error) {\n                deferred.reject(error);\n            } else{\n                deferred.resolve(response);\n            }\n        });\n    } catch(err){\n        deferred.reject(err);\n    }\n    return deferred.promise;\n}\n\nfunction setTokens(token) {\n    if (token.accessToken !== undefined && token.accessSecret !== undefined) {\n        updateStatus(token.accessToken, token.accessSecret, message)\n            .then(function() {\n                console.log(\"DONE\"); \n                send();\n            })\n            .catch(function(err) {\n                send(new Error(\"Tweeting failed: \" + err));\n            });\n    } else {\n        send(new Error('Token for profile ' + profile + ' is not valid.'));\n    }\n}\n\nif(clientId !== undefined && clientSecret !== undefined && dashboardDomain !== undefined && message !== undefined){\n    getToken(function(err, token) {\n        if (err !== undefined) {\n           setTokens(token);\n        } else {\n            send(err);\n        }\n    });\n} else {\n    send(new Error(\"Missing properties\"));\n}\n","metadata":{"author":"","category":"Dashboard","description":"SendTweet\n\nsends a tweet.","iconURL":"https://raw.githubusercontent.com/waylayio/documentation/master/icons/sendTwitterDM.png","supportedStates":[],"requiredProperties":["message","profile"],"requiredRawData":[]}}