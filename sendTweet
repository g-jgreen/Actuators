{
  "name": "sendTweet",
  "version": "1.2.0",
  "type": "actuator",
  "script": "var OAuthConsumerKey = options.globalSettings.TEST_OAuthConsumerKey;\nvar OAuthConsumerSecret = options.globalSettings.TEST_OAuthConsumerSecret;\nvar OAuthAccessToken = options.globalSettings.TEST_OAuthAccessToken;\nvar OAuthAccessTokenSecret = options.globalSettings.TEST_OAuthAccessTokenSecret;\nvar message; \n\ntry {\n    message = waylayUtil.getRawData(options, options.requiredProperties.message);\n    console.log(\"parsed using raw data\");\n} catch(err){\n    message = waylayUtil.template(options, options.requiredProperties.message);\n    console.log(\"parsed using template\");\n}\nvar latitude, longitude; \ntry{\n    latitude = waylayUtil.getRawData(options, options.requiredProperties.latitude); \n    longitude = waylayUtil.getRawData(options, options.requiredProperties.longitude); \n} catch(err){\n    latitude = options.requiredProperties.latitude;\n    longitude = options.requiredProperties.longitude;\n}\n\nconsole.log(\"message: \", message);\nvar sendClient = new twitter({\n  consumer_key: OAuthConsumerKey,\n  consumer_secret: OAuthConsumerSecret,\n  access_token_key: OAuthAccessToken,\n  access_token_secret: OAuthAccessTokenSecret\n});\n\n//message can contain location for instance.\nvar tweetMessage = function(message){\n    var tweet;\n    try{\n        message = JSON.parse(message)\n    } catch(err){\n    }\n    console.log(\"tweet : \", message);\n    if(message.status !== undefined){\n       console.log(\"tweet as an object:\", message);\n       tweet = message; \n    } else{\n        console.log(\"tweet as status:\", message);\n        tweet = { status:  message};   \n    }\n    if(latitude && longitude){\n        tweet.lat = options.requiredProperties.latitude;\n        tweet.long = options.requiredProperties.longitude;\n    }\n    var deferred = Q.defer();\n    console.log(\"sending \", message);\n    try{\n        sendClient.post('statuses/update', tweet, function(error, tweet, response){\n            if(error) {\n                deferred.reject(error);\n            } else{\n                deferred.resolve(response);\n            }\n        });\n    } catch(err){\n        deferred.reject(err);\n    }\n    return deferred.promise;\n};\n\ntry{\n    if(message !== undefined) {\n        if(!Array.isArray(message)){\n            message = [message];\n        }\n        console.log(message);\n        var promises = message.map(function(q) {\n            return tweetMessage(q);\n        });\n        console.log(\"sending..\");\n        Q.all(promises).then(function(){\n            console.log(\"DONE\"); \n            send();\n        }).fail(function(err){\n            console.log(\"error\", err);\n            send(new Error(\"Tweeting failed: \" + err));\n        });\n    } else {\n        send(new Error(\"Missing message\"));\n    }\n} catch(err){\n    send(new Error(err));\n}\n",
  "metadata": {
    "author": "",
    "category": "Social",
    "description": "Send tweets. \nMessage is pre-processed using waylayUtil.template package.\n\nYou will need to get API keys by registering your app\n\nMessage can also be a status object, and it can also contain geo location \n",
    "iconURL": "https://static.waylay.io/plugs/icons/tweet.png",
    "supportedStates": [],
    "requiredProperties": [
      "message",
      "latitude",
      "longitude"
    ],
    "requiredRawData": []
  }
}
