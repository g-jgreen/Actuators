{
    "name": "SparkFunctionCall",
    "version": "1.0.1",
    "type": "actuator",
    "script": "var props = options.requiredProperties;\nvar token = props.access_token || options.globalSettings.spark_token;\n\nif(token  && props.functionName && props.param  && props.device){\n\n  var options = {\n    url: 'https://api.spark.io/v1/devices/' + props.device + \"/\" + props.functionName,\n    form:    { param: props.param, access_token: token }\n  };\n\n  var callback = function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var bodyJson = JSON.parse(body);\n      send();\n    }else{\n      send(new Error(\"Calling api.spark.io failed: \" + error + \" \" + body));\n    }\n  };\n\n  request.post(options, callback);\n}else{\n  send(new Error(\"Missing properties\"));\n}",
    "metadata": {
        "author": "francisdb",
        "category": "Spark",
        "description": "Spark.io device function call\n\nInput parameters:\n<ul>\n<li>spark access token</li>\n<li>function that you want to call</li>\n<li>paramter to pass to the function</li>\n<li>deviceID</li>\n</ul>",
        "documentationURL": "https://www.spark.io/build/54381e2c688843ecad000826",
        "iconURL": "https://static.waylay.io/plugs/icons/spark.png",
        "supportedStates": [],
        "requiredProperties": [
            "access_token",
            "functionName",
            "param",
            "device"
        ],
        "requiredRawData": []
    }
}
