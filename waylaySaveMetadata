{
  "name": "waylaySaveMetadata",
  "version": "0.0.3",
  "type": "actuator",
  "script": "var resource;\nvar username =  options.globalSettings.API_KEY;\nvar password = options.globalSettings.API_PASS;\nvar domain = options.requiredProperties.domain || options.globalSettings.waylay_domain || \"app.waylay.io\";\nvar payload = options.requiredProperties.payload;\nvar msg;\n\ntry{\n    resource = waylayUtil.getRawData(options, options.requiredProperties.resource);\n} catch(err){\n    resource = options.requiredProperties.resource || waylayUtil.getResource(options);    \n}\nif(resource === '$')\n  resource = options.node.NAME\n\nif(resource === undefined || resource === \"\"){\n    send(new Error(\"resource not defined\"))\n}\n\nif(payload){\n    try{\n       msg = waylayUtil.evaluateData(options, payload);    \n       if (typeof msg === 'string') {\n           console.log(\"trying to parse to JSON\");\n            msg = JSON.parse(msg);\n        }\n        console.log(\"Parsed using eval\");\n        console.log(msg);\n    } catch(err){\n        console.log(\"eval failed with \" + err);\n        console.log(\"trying using raw data\");\n        try {\n            msg = waylayUtil.getRawData(options, payload);\n        } catch(err){\n            console.log(\"raw data failed with \" + err);\n        }\n    } \n} else {\n    try {\n        msg = waylayUtil.getRawData(options, options.node.NAME);\n    } catch(err){\n        console.log(\"trying raw data failed for: \" + options.node.NAME);\n    }\n}\n\n\nif(msg && domain && username && password) {\n    var url = \"https://\"+ domain+ \"/api/resources/\" + resource ;\n     var options = {\n                    url: url,\n                    auth: {\n                    user: username,\n                    password: password\n                  },\n                  json: msg\n    };\n    request.put(options, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n        console.log(response);\n        send(null);\n        }\n    else {\n        console.log(response);\n        send(new Error(error))\n    }\n    }); \n   \n}else{\n  send(new Error(\"Missing properties\"));\n}\n",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "waylaySaveMetadata",
    "iconURL": "https://static.waylay.io/plugs/icons/meta.png",
    "supportedStates": [],
    "requiredProperties": [
      "domain",
      "resource",
      "payload"
    ],
    "requiredRawData": []
  }
}
