{
    "name": "mandrillSendMail",
    "version": "1.0.4",
    "type": "actuator",
    "script": "/*\ne-mail input can as well be the sensor that retuns e-mail in rawData in format {e-mail : \"example@gmail.com\"}.\nIn that case you need to put in options.requiredProperties.to a sensor name\n*/\nvar e_mail;\ntry{\n    e_mail= waylayUtil.evaluateData(options, options.requiredProperties.to);    \n} catch(err){\n    console.log(err);\n}\n\nvar TO = e_mail || options.requiredProperties.to;\n\nif(options.globalSettings.MANDRILL_KEY === undefined || options.requiredProperties.message === undefined ||\n    options.requiredProperties.subject === undefined || options.requiredProperties.from === undefined || \n    TO === undefined){\n        send(new Error(\"Error missing properties\"));\n    }\nelse {\n    if(waylayUtil.validateEmail(TO) && waylayUtil.validateEmail(options.requiredProperties.from) ){\n        var parsedMessage = waylayUtil.evaluateData(options, options.requiredProperties.message);\n        var tagLine = \"\\n\\n\\n -------------------------------\\npowered by waylay.io\";\n        var message = {\n            key: options.globalSettings.MANDRILL_KEY,\n            message: {\n                text: parsedMessage + tagLine,\n                subject: options.requiredProperties.subject,\n                from_email: options.requiredProperties.from,\n                from_name: options.requiredProperties.from,\n                to: [\n                    {\n                        email: TO,\n                        name: TO,\n                        type: \"to\"\n                    }\n                ],\n                headers: {\n                    \"Reply-To\": options.requiredProperties.from\n                },\n            }\n        };\n              \n        var requestOptions = {\n          url: 'https://mandrillapp.com/api/1.0/messages/send.json\"',\n          json: message\n        };\n        \n        request.post(requestOptions, function (error, response, body) {\n          if (!error && response.statusCode == 200) {\n            console.log(body);\n            send();\n          }else{\n              send(new Error(\"Error \" + error + \" \" + body));\n          }\n        });\n    } else{\n        var message = \"Emails are not valid: to=\" + TO + \", from=\" + options.requiredProperties.from;\n        console.log(message);\n        //console.error(message);\n        send(new Error(message));\n    }\n}\n\n      ",
    "metadata": {
        "author": "",
        "category": "Mail",
        "description": "Sends e-mails using the <a href=\"https://www.mandrill.com/\">Mandrill</a> saas infrastructure. \n\nInput parameters are:\n<ul>\n<li>from: sender email address</li>\n<li>to: the email address or the sensor that retuns e-mail in rawData, format {e-mail : \"example@gmail.com\"}.\nIn that case you need to put in 'to' a sensor name</li>\n<li>message: parsed using waylayUtil.evaluateData function (waylay expression language)</li>\n<li>subject: email subject</li>\n</ul>\n\nActuator requires <strong>MANDRILL_KEY</strong> in the global settings\n",
        "documentationURL": "",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/mandrillMail.png",
        "supportedStates": [],
        "requiredProperties": [
            "from",
            "to",
            "message",
            "subject"
        ],
        "requiredRawData": []
    }
}
