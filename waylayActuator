{
      "name": "waylayActuator",
      "version": "1.0.1",
      "script": "var thing  = options.requiredProperties.thing || options.task.RESOURCE;\n\nvar msg = \"waylay message\";\nif(options.requiredProperties.message)\n    msg = waylayUtil.evaluateData(options, options.requiredProperties.message);\n\nvar data = {\n    taskId: options.task.TASK_ID,\n    resource: options.task.RESOURCE,\n    time: new Date(),\n    message : msg\n}\n\nif(thing){\n  var url = \"https://data.waylay.io/resources/\"+ thing;\n  var options = {\n    url: url,\n    json: data\n  };\n  var callback = function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      console.log(body);\n      send();\n    }else{\n      send(new Error(\"Calling dweet failed: \" + error + \" \" + body));\n    }\n  };\n  request.post(options, callback);\n}else{\n  send(new Error(\"Missing properties\"));\n}",
      "metadata": {
        "author": "",
        "category": "Waylay",
        "description": "Waylay actuator\n\n<br>\nActuator will post a message with resource name, \ntaskid and the message.\n<h3>Inputs</h3>\n<ul>\n<li>thing, or if NOT defined, sensor takes the resource</li>\n<li>message, can be in format node.data</li>\n</ul>\n\n\n",
        "documentationURL": "",
        "iconURL": "https://pbs.twimg.com/profile_images/551368936948654082/gfTrJCSX_400x400.png",
        "supportedStates": [],
        "requiredProperties": [
          "thing",
          "message"
        ],
        "requiredRawData": []
      }
    }
