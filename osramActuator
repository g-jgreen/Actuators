{"name":"osramActuator","version":"0.0.4","type":"actuator","script":"var props = options.requiredProperties;\n\nvar clientId = options.globalSettings.DASHBOARD_KEY;\nvar clientSecret = options.globalSettings.DASHBOARD_SECRET;\nvar dashboardDomain = options.globalSettings.DASHBOARD_DOMAIN;\n\nvar tokenFromCache = waylayUtil.getCacheData(options, \"token\");\n\nvar idx = props.idx;\nvar onoff = props.onoff;\nvar hue = props.hue;\nvar saturation = props.saturation;\nvar color = props.color;\nvar level = props.level;\nvar ctemp = props.ctemp;\nvar time = props.time || 0;\n\n\nvar profile = props.profile || waylayUtil.getResource(options);\n\nvar baseUrl = \"https://eu.lightify-api.org/lightify/services\";\n\nvar getToken = function(callback){\n  var url = \"https://\"+dashboardDomain+\"/api/token/lightify/\" + profile\n  var options = {\n    url: url,\n    auth: {\n      user: clientId,\n      password: clientSecret\n    }\n  };\n\n  try {\n    request(options, function(error, response, body) {\n      if (!error && response.statusCode == 200) {\n        var bodyJson = JSON.parse(body);\n        callback(null, bodyJson);\n      }else{\n        callback(new Error(\"Calling dashboard api failed: \" + error + \" \" + body + options.url));\n      }\n    });\n  } catch(err){\n    callback(new Error(\"Calling dashboard api failed: \" + err));\n  }\n}\n\n\nvar setState = function(token, params, callback) {\n  var url = baseUrl + \"/device/set\";\n  console.log(url, params)\n  request.get(url, {\n    headers: {\n      'Authorization': token\n    },\n    qs: params\n  }, function(err, response, body) {\n    if (!err && response.statusCode == 200) {\n      console.log(url, body)\n      callback(null, body);\n    } else{\n      callback(new Error(url + \" \" + response.statusCode + \" \" + body));\n    }\n  });\n};\n\nvar setDeviceData = function(token, params, callback){\n  if(token.accessToken !== undefined){\n    setState(token.accessToken, params, function(err, data){\n      if(err) return callback(err);\n      callback(null, data);\n    });\n  } else{\n    callback(new Error(\"Token for profile \"+ profile + \" not valid\"));\n  }\n}\n\n\n//idx = 1\n//ctemp = 2000\n//hue = 60\n//saturation = 1\n//onoff = 0\n\nfunction doSend(reqParams){\n  getToken(function(err, token){\n    if(err){\n      //send(err);\n      //try with the old token\n      if(tokenFromCache !== undefined){\n        console.log(\"try with an old token, since the request to the dashboard failed\");\n        setDeviceData({accessToken: tokenFromCache}, reqParams, function(err, data){\n          if(err) return send(err);\n          send(null, data);\n        });\n      }else {\n        send(new Error(err));\n      }\n    }else{\n      setDeviceData(token, reqParams, function(err, data){\n        if(err) return send(err);\n        send(null);\n      });\n    }\n  });\n}\n\nif(clientId !== undefined && clientSecret !== undefined && dashboardDomain !== undefined && idx !== undefined){\n\n\n  // 5 options\n  // https://eu.lightify-api.org/lightify/services/device/set?idx=1&time=0&onoff=1\n  // https://eu.lightify-api.org/lightify/services/device/set?idx=1&time=0&hue=340&saturation=0.335\n  // https://eu.lightify-api.org/lightify/services/device/set?idx=1&time=0&color=FFFF4D\n  // https://eu.lightify-api.org/lightify/services/device/set?idx=1&time=0&level=0.12\n  // https://eu.lightify-api.org/lightify/services/device/set?idx=1&time=0&ctemp=3210\n\n  var reqParams = {\n    time: time,\n    idx: idx\n  }\n\n  if(onoff !== undefined){\n    reqParams.onoff = onoff\n    doSend(reqParams)\n  }else if (level !== undefined) {\n    reqParams.level = level;\n    doSend(reqParams)\n  }else if (hue !== undefined && saturation !== undefined){\n    reqParams.hue = hue;\n    reqParams.saturation = saturation;\n    doSend(reqParams)\n  }else if(color !== undefined){\n    reqParams.color = color;\n    doSend(reqParams)\n  }else if(ctemp !== undefined){\n    reqParams.ctemp = ctemp;\n    doSend(reqParams)\n  }else{\n    send(new Error(\"Need one of [onoff, hue&saturation, color, levelm ctemp]\"));\n  }\n}else{\n  send(new Error(\"Missing properties\"));\n}\n","metadata":{"author":"","category":"Dashboard","description":"OSRAM actuator\nyou can change light properties\n\nInput arguments are:\n\n<ul>\n<li>profile: dashboard user email</li>\n<li>time: 0 - 2147483647, default 0, transition time in seconds? Does not seem to work</li>\n</ul>\n\nOnly fill one of the next\n<ul>\n<li>idx: lamp index (1, 2, ...)</li>\n<li>onoff: 1 or 0</li>\n<li>hue: 0 - 360 (needs to be combined with saturation)</li>\n<li>saturation: 0.0 - 1.0 (needs to be combined with saturation)</li>\n<li>color: hex color, eg FF0000</li>\n<li>level: 0.0 - 1.0</li>\n<li>ctemp: 1000 - 8000, color temperature in K</li>\n</ul>","documentationURL":"","iconURL":"https://dummyimage.com/160&text=osramActuator","supportedStates":[],"requiredProperties":["idx","onoff","hue","saturation","color","level","ctemp","time","profile"],"requiredRawData":[]}}