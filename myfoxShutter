{
    "name": "myfoxShutter",
    "version": "1.0.0",
    "type": "actuator",
    "script": "var props = options.requiredProperties;\n\nvar clientId = options.globalSettings.DASHBOARD_KEY;\nvar clientSecret = options.globalSettings.DASHBOARD_SECRET;\nvar dashboardDomain = options.globalSettings.DASHBOARD_DOMAIN;\n\nconst validStates = [\"open\", \"close\", \"my\"]\n\nvar tokenFromCache = waylayUtil.getCacheData(options, \"token\");\nvar shutterState = props.shutterState || \"open\";\nvar siteid = props.siteId;\nvar deviceid = props.deviceId;\nvar profile = props.profile || waylayUtil.getResource(options);\nvar json = {\n            shutterState: shutterState\n        };\nconsole.log(json);\n\n\nvar getToken = function(callback){\n  var options = {\n      url: \"https://\"+dashboardDomain+\"/api/token/myfox/\" + profile,\n       auth: {\n        user: clientId,\n        password: clientSecret\n      }\n  };\n  \n  try {\n      request(options, function(error, response, body) {\n      if (!error && response.statusCode == 200) {\n          var bodyJson = JSON.parse(body);\n          console.info(bodyJson);\n          callback(null, bodyJson);\n      }else{\n          callback(new Error(\"Calling myfox api failed: \" + error + \" \" + body + options.url));\n      }\n    });\n  } catch(err){\n       callback(new Error(\"Calling myfox api failed: \" + err));\n  }\n}\n\n\nvar setState = function(token) {\n    var url = \"https://api.myfox.me/v2/site/\" + siteid +\"/device/\" + deviceid + \"/shutter/\" + shutterState + \"?access_token=\" + token;\n    console.log(url)\n    request.post(url, {\n        json: true\n    }, function(err, response, body) {\n       console.log(body)\n       if (!err && response.statusCode == 200) {\n           if(body.status === \"OK\"){\n                send();\n           }else{\n               send(new Error(body.error));\n           }\n       } else{\n           console.log(response)\n           send(new Error(response.statusCode));\n       }\n    });\n};\n  \nvar setDeviceData = function(token){\n  console.log(token);\n  if(token.accessToken !== undefined){\n    setState(token.accessToken);\n  } else{\n    send(new Error(\"Token for profile \"+ profile + \" not valid\"));  \n    }\n}\n\n\nif(! _.includes(validStates, shutterState)){\n    send(new Error(\"provided state \\\"\" + shutterState + \"\\\" must be one of \" + JSON.stringify(validStates)));\n}else if(clientId !== undefined && clientSecret !== undefined && dashboardDomain !== undefined ){\n  getToken(function(err, token){\n    if(err){\n      //send(err);\n      //try with the old token\n      if(tokenFromCache !== undefined){\n          console.log(\"try with an old token, since the request to the dashboard failed\");\n          setDeviceData({accessToken: tokenFromCache});\n      }else {\n          console.log(err.stack)\n          send(new Error(err));\n      }\n    }else{\n      setDeviceData(token);\n    }\n  });\n}else{\n    send(new Error(\"Missing properties\"));\n}\n",
    "metadata": {
        "author": "",
        "category": "Dashboard",
        "description": "Myfox shutter\nSets shutter state to open, close or 'favorite position'.\n\nInput arguments are:\n<ul>\n<li>shutterstate : open, close or my</li>\n</ul>",
        "documentationURL": "https://api.myfox.me/dev/documentation",
        "iconURL": "https://static.waylay.io/plugs/icons/iot.png",
        "supportedStates": [],
        "requiredProperties": ["shutterState", "siteId", "deviceId", "profile"],
        "requiredRawData": []
    }
}
